// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eGym.Core.Log;

namespace eGym.Core.Log.Migrations
{
    [DbContext(typeof(LogDbContext))]
    partial class LogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("eGym.Core.Log.Batch_LogXBatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BatchId")
                        .HasColumnType("int");

                    b.Property<byte[]>("ConcurrencyTimestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("LogId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BatchId");

                    b.HasIndex("LogId");

                    b.ToTable("Batch_LogXBatch", "dbo");
                });

            modelBuilder.Entity("eGym.Core.Log.Batch_Master", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<byte[]>("ConcurrencyTimestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime>("Creation")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("LastExecutionDateTime")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan?>("LastExecutionDurationTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("LongerExecutionDurationTime")
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("NextExecutionScheduleDateTime")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan?>("ShorterExecutionDurationTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Batch_Master", "dbo");
                });

            modelBuilder.Entity("eGym.Core.Log.Log_GDPR", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("Action")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<byte[]>("ConcurrencyTimestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DbQuery")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldNames")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("TableNames")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Log_GDPR", "dbo");
                });

            modelBuilder.Entity("eGym.Core.Log.Log_Master", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CallerFilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CallerLineNumber")
                        .HasColumnType("int");

                    b.Property<string>("CallerMemberName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ConcurrencyTimestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Message")
                        .HasColumnType("ntext");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Log_Master", "dbo");
                });

            modelBuilder.Entity("eGym.Core.Log.Batch_LogXBatch", b =>
                {
                    b.HasOne("eGym.Core.Log.Batch_Master", "Batch")
                        .WithMany("LogXBatches")
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eGym.Core.Log.Log_Master", "Log")
                        .WithMany("LogXBatches")
                        .HasForeignKey("LogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Batch");

                    b.Navigation("Log");
                });

            modelBuilder.Entity("eGym.Core.Log.Log_Master", b =>
                {
                    b.HasOne("eGym.Core.Log.Log_Master", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("eGym.Core.Log.Batch_Master", b =>
                {
                    b.Navigation("LogXBatches");
                });

            modelBuilder.Entity("eGym.Core.Log.Log_Master", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("LogXBatches");
                });
#pragma warning restore 612, 618
        }
    }
}
